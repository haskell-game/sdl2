name:                sdl2
version:             2.0.0
synopsis:            Both high- and low-level bindings to the SDL library (version 2.0.3).
description:
  This package contains bindings to the SDL 2 library, in both high- and
  low-level forms:
  .
  The 'SDL' namespace contains high-level bindings, where enumerations are split
  into sum types, and we perform automatic error-checking.
  .
  The 'SDL.Raw' namespace contains an almost 1-1 translation of the C API into
  Haskell FFI calls. As such, this does not contain sum types nor error
  checking. Thus this namespace is suitable for building your own abstraction
  over SDL, but is not recommended for day-to-day programming.

license:             BSD3
license-file:        LICENSE
author:              Gabríel Arthúr Pétursson, Oliver Charles
maintainer:          gabriel@system.is, ollie@ocharles.org.uk
copyright:           Copyright © 2013, 2014  Gabríel Arthúr Pétursson
category:            Graphics
build-type:          Simple
cabal-version:       >= 1.10

extra-source-files:
  cbits/sdlhelper.c,
  include/sdlhelper.h

source-repository head
  type:     git
  location: git://github.com/haskell-game/sdl2.git

-- source-repository this
--   type:     git
--   location: git://github.com/haskell-game/sdl2.git
--  tag:      2.0.0

flag NoExamples
  description:       Disable building of the examples
  default:           False

library
  ghc-options: -Wall

  exposed-modules:
    SDL
    SDL.Audio
    SDL.Events
    SDL.Exception
    SDL.Filesystem
    SDL.Haptic
    SDL.Hints
    SDL.Init
    SDL.Input
    SDL.Input.GameController
    SDL.Input.Joystick
    SDL.Input.Keyboard
    SDL.Input.Mouse
    SDL.Power
    SDL.Time
    SDL.Video
    SDL.Video.OpenGL
    SDL.Video.Renderer
    SDL.Window

    SDL.Raw
    SDL.Raw.Audio
    SDL.Raw.Basic
    SDL.Raw.Enum
    SDL.Raw.Event
    SDL.Raw.Filesystem
    SDL.Raw.Haptic
    SDL.Raw.Platform
    SDL.Raw.Power
    SDL.Raw.Thread
    SDL.Raw.Timer
    SDL.Raw.Types
    SDL.Raw.Video

  other-modules:
    Data.Bitmask
    SDL.Internal.Numbered
    SDL.Internal.Types
    SDL.Raw.Enum.Internal

  if impl(ghc>=7.8)
    exposed-modules: SDL.Raw.Enum.Pattern

  hs-source-dirs:
    src/

  c-sources:
    cbits/sdlhelper.c

  include-dirs:
    include

  includes:
    SDL.h
    sdlhelper.h

  extra-libraries:
    SDL2

  pkgconfig-depends:
    sdl2 >= 2.0.3

  build-depends:
    base >= 4.0 && < 4.8,
    bytestring >= 0.10.4.0 && < 0.11,
    linear >= 1.10.1.2 && < 1.11,
    text >= 1.1.0.0 && < 1.3,
    vector >= 0.10.9.0 && < 0.11

  default-language:
    Haskell2010

executable lazyfoo-lesson-01
  if flag(NoExamples)
    buildable: False
  build-depends: base >= 4.0 && < 4.8, linear >= 1.10.1.2 && < 1.11, sdl2
  hs-source-dirs: examples/lazyfoo
  main-is: Lesson01.hs
  default-language: Haskell2010
  ghc-options: -Wall -main-is Lazyfoo.Lesson01

executable lazyfoo-lesson-02
  if flag(NoExamples)
    buildable: False
  build-depends: base >= 4.0 && < 4.8, linear >= 1.10.1.2 && < 1.11, sdl2
  hs-source-dirs: examples/lazyfoo
  main-is: Lesson02.hs
  default-language: Haskell2010
  ghc-options: -Wall -main-is Lazyfoo.Lesson02

executable lazyfoo-lesson-03
  if flag(NoExamples)
    buildable: False
  build-depends: base >= 4.0 && < 4.8, linear >= 1.10.1.2 && < 1.11, sdl2
  hs-source-dirs: examples/lazyfoo
  main-is: Lesson03.hs
  default-language: Haskell2010
  ghc-options: -Wall -main-is Lazyfoo.Lesson03

executable lazyfoo-lesson-04
  if flag(NoExamples)
    buildable: False
  build-depends: base >= 4.0 && < 4.8, linear >= 1.10.1.2 && < 1.11, sdl2
  hs-source-dirs: examples/lazyfoo
  main-is: Lesson04.hs
  default-language: Haskell2010
  ghc-options: -Wall -main-is Lazyfoo.Lesson04

executable lazyfoo-lesson-05
  if flag(NoExamples)
    buildable: False
  build-depends: base >= 4.0 && < 4.8, linear >= 1.10.1.2 && < 1.11, sdl2
  hs-source-dirs: examples/lazyfoo
  main-is: Lesson05.hs
  default-language: Haskell2010
  ghc-options: -Wall -main-is Lazyfoo.Lesson05

executable lazyfoo-lesson-07
  if flag(NoExamples)
    buildable: False
  build-depends: base >= 4.0 && < 4.8, linear >= 1.10.1.2 && < 1.11, sdl2
  hs-source-dirs: examples/lazyfoo
  main-is: Lesson07.hs
  default-language: Haskell2010
  ghc-options: -Wall -main-is Lazyfoo.Lesson07

executable lazyfoo-lesson-08
  if flag(NoExamples)
    buildable: False
  build-depends: base >= 4.0 && < 4.8, linear >= 1.10.1.2 && < 1.11, sdl2
  hs-source-dirs: examples/lazyfoo
  main-is: Lesson08.hs
  default-language: Haskell2010
  ghc-options: -Wall -main-is Lazyfoo.Lesson08

executable lazyfoo-lesson-09
  if flag(NoExamples)
    buildable: False
  build-depends: base >= 4.0 && < 4.8, linear >= 1.10.1.2 && < 1.11, sdl2
  hs-source-dirs: examples/lazyfoo
  main-is: Lesson09.hs
  default-language: Haskell2010
  ghc-options: -Wall -main-is Lazyfoo.Lesson09

executable lazyfoo-lesson-10
  if flag(NoExamples)
    buildable: False
  build-depends: base >= 4.0 && < 4.8, linear >= 1.10.1.2 && < 1.11, sdl2
  hs-source-dirs: examples/lazyfoo
  main-is: Lesson10.hs
  default-language: Haskell2010
  ghc-options: -Wall -main-is Lazyfoo.Lesson10

executable lazyfoo-lesson-11
  if flag(NoExamples)
    buildable: False
  build-depends: base >= 4.0 && < 4.8
               , lens >= 4.4.0.2
               , linear >= 1.10.1.2 && < 1.11
               , sdl2
  hs-source-dirs: examples/lazyfoo
  main-is: Lesson11.hs
  default-language: Haskell2010
  ghc-options: -Wall -main-is Lazyfoo.Lesson11

executable lazyfoo-lesson-12
  if flag(NoExamples)
    buildable: False
  build-depends: base >= 4.0 && < 4.8
               , lens >= 4.4.0.2
               , linear >= 1.10.1.2 && < 1.11
               , sdl2
  hs-source-dirs: examples/lazyfoo
  main-is: Lesson12.hs
  default-language: Haskell2010
  ghc-options: -Wall -main-is Lazyfoo.Lesson12

